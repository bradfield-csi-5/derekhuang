#!/usr/bin/env bash

set -euo pipefail

BASE_URL="https://en.wikipedia.org/w/api.php"
PARSE_URL="${BASE_URL}?action=parse&format=json&formatversion=2"
QUERY_URL="${BASE_URL}?action=query&format=json&formatversion=2&prop=extracts&exintro&explaintext"
SEARCH_URL="${BASE_URL}?action=opensearch&limit=1"

script=$(basename "$0")

function usage {
  cat <<EOF
Usage: $script PAGE [SECTION...]

Display summary information from Wikipedia.

Arguments:
  PAGE          Wikipedia page to search for.
  SECTION       Optional. A section on a page to get the summary for.
EOF
  exit 1
}

search=${1:-}
section=${2:-}
if [ -z "$search" ]; then
  usage
fi

function get_page {
  # Search queries always return a 200 with the fourth array element
  # as an array of urls to pages if any exist
  local url
  url=$(curl -s --url-query "search=$search" "$SEARCH_URL" | jq -r '.[3][0]')

  if [ "$url" == "null" ]; then
    echo
    return
  fi

  basename "$url"
}

function get_section_idx {
  local sect="$1"
  # TODO: get section index from list of sections
  # curl -s --url-query "page=$page" "${PARSE_URL}&prop=sections&redirects" | jq '.parse.sections'
}

function get_sections {
  local si=${1:-0}
  if [ "$si" -gt 0 ]; then
    # TODO: get subsections from wiki api
    curl -s --url-query "page=$page" "${PARSE_URL}&prop=sections&section=${si}&redirects" | jq '.parse.sections'
    return
  fi

  # Get all sections
  curl -s --url-query "page=$page" "${PARSE_URL}&prop=sections&redirects" | jq '.parse.sections'
}

function print_summary {
  if [ -n "$section" ]; then
    echo "===== $page > $section ====="
    # TODO: print the first sentence of the section
    return
  fi

  echo "===== $page ====="
  curl -s --url-query "titles=${page}" "${QUERY_URL}&redirects" | \
  jq -r '.query.pages[0].extract | split(". ") | .[0]'
  echo
}

function print_sections {
  if [ -n "$section" ]; then
    echo "===== Subsections ====="
    # TODO: use the section index to get subsections from the wiki api
    return
  fi

  echo "===== Sections ====="
  curl -s --url-query "page=$page" "${PARSE_URL}&prop=sections&redirects" | \
  jq "[.parse.sections[] | select(.toclevel == 1)]" | \
  jq -r '.[].line'
}

function main {
  page=$(get_page)
  if [ -z "$page" ]; then
    echo "Page not found." >&2
    exit 1
  fi

  if [ -n "$section" ]; then
    si=$(get_section_idx "$section")
    sections=$(get_sections "$si")
  else
    sections=$(get_sections)
  fi

  print_summary
  print_sections
}

main
